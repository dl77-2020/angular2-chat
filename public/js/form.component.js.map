{"version":3,"sources":["form.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAIA,0HAA0H;YAa1H;gBASE,eAAe;gBACf,uBAAoB,YAAyB;oBAAzB,iBAAY,GAAZ,YAAY,CAAa;oBAC3C,gFAAgF;oBAChF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;gBAC9C,CAAC;gBAED,0EAA0E;gBAC1E,mCAAW,GAAX;oBACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;wBAAC,MAAM,CAAC,WAAW,CAAA;oBACvC,IAAI;wBAAC,MAAM,CAAC,WAAW,CAAC;gBAC1B,CAAC;gBACD,mCAAW,GAAX;oBACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;wBAAC,MAAM,CAAC,MAAM,CAAA;oBAClC,IAAI;wBAAC,MAAM,CAAC,MAAM,CAAC;gBACrB,CAAC;gBACD,yDAAyD;gBACzD,qCAAa,GAAb;oBACE,yDAAyD;oBACzD,EAAE,CAAC,CAAE,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAE,CAAC;wBAAC,MAAM,CAAC,KAAK,CAAC;oBAEjD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA,CAAC;wBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC9C,CAAC;oBAAC,IAAI,CAAE,CAAC;wBACP,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC/C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACvB,CAAC;gBACH,CAAC;gBA7BD;oBAAC,YAAK,EAAE;;iEAAA;gBAnBV;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,seAOT;qBACF,CAAC;;iCAAA;gBAuCF,oBAAC;YAAD,CArCA,AAqCC,IAAA;YArCD,yCAqCC,CAAA","file":"form.component.js","sourcesContent":["// Import all of our dependencies\nimport {Component, Input} from 'angular2/core';\nimport {ChatService, Message, Server, User} from './chat.service';\n    \n// Use the @Component Decorator to define the following class as a component and provide the meta data including the view \n@Component({\n  selector: \"chat-form\",\n  template: `\n    <form id=\"JoinForm\" class=\"form-inline text-right\">\n        <fieldset [disabled]=\"!server.connected || isJoining\">\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"inputValue\" placeholder=\"{{placeholder()}}\" autocomplete=\"off\" required autofocus />\n          <button id=\"sendJoin\" class=\"btn btn-success\" [disabled]=\"!inputValue || isJoining\" (click)=\"buttonClicked(hero)\">{{buttonLabel()}}</button>\n        </fieldset>\n    </form>\n  `\n})\n\nexport class FormComponent {\n  //CLASS PROPERTIES\n  \n  inputValue:string;\n  server : Server;\n  isJoining : boolean;\n  //when a form component is specified in a template, it is passed a boolean variable to say whether it is a JoinForm or a ChatForm\n  @Input() isJoinForm: boolean;\n\n  //CLASS METHODS\n  constructor(private _chatService: ChatService) {\n    //once component is created grab a reference to the server from the Chat Service\n    this.server = this._chatService.getServer();\n  }\n  \n  //provide functions for deciding what text to display in the form template\n  placeholder(){\n    if (this.isJoinForm) return \"Your Name\" \n    else return \"Say What?\";\n  }\n  buttonLabel(){\n    if (this.isJoinForm) return \"Join\" \n    else return \"Send\";\n  }\n  //handle the button click to communicate with the service\n  buttonClicked(){\n    // basic validation - at least one character in the input\n    if ( this.inputValue.length === 0 ) return false;\n    \n    if (this.isJoinForm){\n      this.isJoining = true;\n      this._chatService.joinChat(this.inputValue);\n    } else  {\n      this._chatService.sendMessage(this.inputValue);\n      this.inputValue = \"\";\n    }\n  }\n}"],"sourceRoot":"/source/"}